// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.bs.js";
import * as Web3auth from "@web3auth/web3auth";

var web3Auth = new Web3auth.Web3Auth({
      clientId: "BNJ1SzF-YpyUMydzFB8O0-7GZLcQUoNUNJpbP5CdtHNOst1Q4_wIxJYetNgyuq7kIaXGpMOf8gEtZIdf6lpXiwU",
      chainConfig: {
        chainNamespace: "other",
        chainId: "0x1",
        rpcTarget: "https://rpc.ankr.com/eth",
        displayName: "Ethereum Mainnet",
        blockExplorer: "https://etherscan.io/",
        ticker: "ETH",
        tickerName: "Ethereum"
      }
    });

function LoginWeb3(Props) {
  var match = React.useState(function () {
        return /* None */0;
      });
  var setProvider = match[1];
  var provider = match[0];
  var match$1 = React.useState(function () {
        return /* Empty */0;
      });
  var setWeb3Key = match$1[1];
  var web3Key = match$1[0];
  var connect = function (param) {
    web3Auth.initModal().then(function (param) {
          web3Auth.connect().then(function (provide) {
                Curry._1(setProvider, (function (param) {
                        return /* Provide */{
                                _0: provide
                              };
                      }));
                console.log(provide);
                return Promise.resolve(undefined);
              });
          return Promise.resolve(undefined);
        });
  };
  var getPrivetKey = function (param) {
    console.log(provider);
    $$Promise.$$catch((
            provider ? provider._0.request({
                    method: "private_key"
                  }) : Promise.resolve("")
          ).then(function (address) {
              Curry._1(setWeb3Key, (function (param) {
                      return /* PrivateKey */{
                              _0: address
                            };
                    }));
              return Promise.resolve(undefined);
            }), (function (error) {
            throw error;
          }));
  };
  var conent = provider ? React.createElement(React.Fragment, undefined, React.createElement("h2", {
              className: "m-2 p-2"
            }, "Connected on web3-auth"), React.createElement("div", {
              className: "d-flex"
            }, React.createElement("button", {
                  className: "btn btn-primary m-2 d-block",
                  disabled: provider === /* None */0,
                  onClick: getPrivetKey
                }, "Get key of web3 wallet -"), React.createElement("span", undefined, web3Key ? "Ower key: " + web3Key._0 : "expression"))) : React.createElement("h2", {
          className: "m-2 p-2"
        }, "Not connect");
  return React.createElement("div", undefined, React.createElement("button", {
                  className: "btn btn-primary m-2 d-block",
                  onClick: connect
                }, "Connect in web3auth"), conent);
}

var make = LoginWeb3;

export {
  web3Auth ,
  make ,
}
/* web3Auth Not a pure module */
